[tool.ruff]
extend-select = [
  # pyflakes, pycodestyle
  "F", "E", "W",
  # mmcabe
  "C90",
  # isort
  "I",
  # pep8-naming
  "N",
  # pyupgrade
  "UP",
  # flake8-2020
  "YTT",
  # flake8-async
  "ASYNC",
  # flake8-boolean-trap
  "FBT",
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # flake8-django
  "DJ",
  # flake8-implicit-string-concatenation
  "ISC",
  # flake8-no-pep420
  "INP",
  # flake8-pie
  "PIE",
  # flake8-return
  "RET",
  # flake8-slots
  "SLOT",
  # flake8-simplify
  "SIM",
  # flake8-tidy-imports
  "TID",
  # flake8-gettext
  "INT",
  # flake8-use-pathlib
  "PTH",
  # pygrep-hooks
  "PGH",
  # pylint
  "PLC", "PLE", "PLW",
  # tryceratops
  "TRY",
  # refurb
  "FURB",
  # flake8-logging
  "LOG",
  # ruff
  "RUF005", "RUF006", "RUF007", "RUF008", "RUF009", "RUF010", "RUF011",
  "RUF015", "RUF016", "RUF017", "RUF100", "RUF200",
]
extend-ignore = [
  # Allow zip() without strict=
  "B905",
  # No line length errors
  "E501",
]
fix = true
show-fixes = true
target-version = "py311"
preview = true

[tool.ruff.isort]
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.per-file-ignores]
"*/migrat*/*" = [
  # Allow using PascalCase model names in migrations
  "N806",
  # Ignore the fact that migration files are invalid module names
  "N999",
]
"fabfile.py" = [
  # No boolean trap in function definitions in the fabfile
  "FBT002",
]
"conf/*" = [
  # Allow Python files in conf/ without __init__
  "INP",
]
"scripts/*" = [
  # Allow Python files in scripts/ without __init__
  "INP",
]

[tool.coverage.run]
branch = true
omit = [
    "*migrate*",
    "*migrations*",
    "*venv*",
]

[tool.coverage.report]
skip_covered = true
show_missing = true
